<% if @view_in_config && @erb_code %>
  <%= render inline: @erb_code %>
  
  <% else %>
  <div class="container">
  <div class="page-header clearfix">
    <div class="pull-left">
    <h2><%=@title%></h2>
    </div>
  </div>
<%= simple_form_for @part, html: { class: 'form-horizontal col-sm-' + BUTTONS_CLS['form-span#'] },
    wrapper: :horizontal_form,
    wrapper_mappings: {
    check_boxes: :horizontal_radio_and_checkboxes,
    radio_buttons: :horizontal_radio_and_checkboxes,
    file: :horizontal_file_input,
    boolean: :horizontal_boolean
  } do |f| %>
  
  <div class="form-inputs"> 

  <%= f.input :name, :label => t('Part Name'), :readonly => readonly?(@part, 'name') %>  
  <%= f.input :part_num, :label => t('Part#'), :readonly => readonly?(@part, 'part_num') %>
  <%= f.input :spec, :label => t('Spec'), :input_html => {:rows => 3}, :readonly => readonly?(@part, 'spec') %>
  <%= f.input :unit, :label => t('Qty Unit'), :collection => Commonx::CommonxHelper.return_misc_definitions('piece_unit').pluck('name').join(',').split(',').map(&:strip), :readonly => readonly?(@part, 'unit') %>
  <%= f.input :category_id, :label => t('Part Category'), :collection => TwoTierDefinitionx::Definition.where('active = ? AND for_which = ?', true, 'material_category').order('ranking_index'), :include_blank => true %>
  <%= f.input :sub_category_id, :label => t('Part Sub Category'), :collection => TwoTierDefinitionx::SubDefinition.where(active: true).order('ranking_index') %>
  <%= f.input :preferred_supplier, :label => t('Preferred Supplier'), :input_html => {:rows => 2}, :readonly => readonly?(@part, 'preferred_supplier') %>
  <%= f.input :preferred_mfr, :label => t('Preferred Mfr'), :input_html => {:rows => 2}, :readonly => readonly?(@part, 'preferred_mfr') %>
  <%= f.input :active, :label => t("Active"), :as => :boolean unless readonly?(@part, 'active') %>
  <%= f.input :active_noupdate, :label => t("Active"), :readonly => true, :input_html => {:value => @part.active ? t('Yes') : t('No') } if readonly?(@part, 'active') %>
  <%= f.input :last_updated_by_name, :label => t('Last Updated By'), :input_html => {:value => @part.last_updated_by.name}, :readonly => true if @part.last_updated_by_id.present? %>
  <%= f.input :field_changed, :as => :hidden %> 
  <%= render inline: @aux_erb_code, locals: {f: f} if @aux_resource %>
 
  <div class="form-actions col-sm-offset-<%=BUTTONS_CLS['offset#']%>" > 
    <%= link_to t('Back'), SUBURI + "/authentify/view_handler?index=0", :class => BUTTONS_CLS['action'] %>
    <%= f.button :submit, t('Save'), :class => BUTTONS_CLS['action'] %>  
  </div> 
  
 </div>
<% end %>  

</div>

<% end %>
